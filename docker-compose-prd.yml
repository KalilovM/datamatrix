services:
  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
        restart: true
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
    command: npm start

  # Nginx container
  nginx:
    image: nginx:latest
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Mount the same directories Certbot uses so Nginx can serve and read the certs
      - ./certbot/www:/var/www/certbot:ro
      - ./letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - app

  # Certbot container for automatic renewal
certbot:
  image: certbot/certbot:latest
  depends_on:
    - nginx
  # Renew every 12 hours; force if needed
  entrypoint: >
    sh -c "trap exit TERM;
           while :; do
             certbot renew --webroot --webroot-path=/var/www/certbot \
                          --deploy-hook 'nginx -s reload';
             sleep 12h;
           done"
  volumes:
    - ./certbot/www:/var/www/certbot
    - ./letsencrypt:/etc/letsencrypt

volumes:
  postgres_data:
